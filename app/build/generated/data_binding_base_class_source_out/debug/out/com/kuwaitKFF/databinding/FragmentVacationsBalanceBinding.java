// Generated by data binding compiler. Do not edit!
package com.kuwaitKFF.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.Button;
import android.widget.LinearLayout;
import android.widget.Spinner;
import android.widget.TableLayout;
import android.widget.TextView;
import android.widget.ViewFlipper;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.appcompat.widget.AppCompatTextView;
import androidx.databinding.DataBindingUtil;
import androidx.databinding.ViewDataBinding;
import androidx.databinding.ViewStubProxy;
import com.kuwaitKFF.R;
import java.lang.Deprecated;
import java.lang.Object;

public abstract class FragmentVacationsBalanceBinding extends ViewDataBinding {
  @NonNull
  public final AppCompatTextView actualDurationValue;

  @NonNull
  public final AppCompatTextView annualValue;

  @NonNull
  public final AppCompatTextView cashRedemptionValue;

  @NonNull
  public final AppCompatTextView cumulativeValue;

  @NonNull
  public final AppCompatTextView currentlyExcluded;

  @NonNull
  public final AppCompatTextView formerExcludedValue;

  @NonNull
  public final AppCompatTextView frozenBalanceValue;

  @NonNull
  public final Spinner leaveTypeSpinner;

  @NonNull
  public final ViewFlipper mainFlipper;

  @NonNull
  public final AppCompatTextView noOfVacationsValue;

  @NonNull
  public final AppCompatTextView residualValue;

  @NonNull
  public final Button submitButton;

  @NonNull
  public final TableLayout tableLayout;

  @NonNull
  public final TextView textView1;

  @NonNull
  public final TextView titleText;

  @NonNull
  public final LinearLayout topLinear;

  @NonNull
  public final AppCompatTextView totalDurationValue;

  @NonNull
  public final ViewStubProxy vsHeader;

  protected FragmentVacationsBalanceBinding(Object _bindingComponent, View _root,
      int _localFieldCount, AppCompatTextView actualDurationValue, AppCompatTextView annualValue,
      AppCompatTextView cashRedemptionValue, AppCompatTextView cumulativeValue,
      AppCompatTextView currentlyExcluded, AppCompatTextView formerExcludedValue,
      AppCompatTextView frozenBalanceValue, Spinner leaveTypeSpinner, ViewFlipper mainFlipper,
      AppCompatTextView noOfVacationsValue, AppCompatTextView residualValue, Button submitButton,
      TableLayout tableLayout, TextView textView1, TextView titleText, LinearLayout topLinear,
      AppCompatTextView totalDurationValue, ViewStubProxy vsHeader) {
    super(_bindingComponent, _root, _localFieldCount);
    this.actualDurationValue = actualDurationValue;
    this.annualValue = annualValue;
    this.cashRedemptionValue = cashRedemptionValue;
    this.cumulativeValue = cumulativeValue;
    this.currentlyExcluded = currentlyExcluded;
    this.formerExcludedValue = formerExcludedValue;
    this.frozenBalanceValue = frozenBalanceValue;
    this.leaveTypeSpinner = leaveTypeSpinner;
    this.mainFlipper = mainFlipper;
    this.noOfVacationsValue = noOfVacationsValue;
    this.residualValue = residualValue;
    this.submitButton = submitButton;
    this.tableLayout = tableLayout;
    this.textView1 = textView1;
    this.titleText = titleText;
    this.topLinear = topLinear;
    this.totalDurationValue = totalDurationValue;
    this.vsHeader = vsHeader;
  }

  @NonNull
  public static FragmentVacationsBalanceBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup root, boolean attachToRoot) {
    return inflate(inflater, root, attachToRoot, DataBindingUtil.getDefaultComponent());
  }

  /**
   * This method receives DataBindingComponent instance as type Object instead of
   * type DataBindingComponent to avoid causing too many compilation errors if
   * compilation fails for another reason.
   * https://issuetracker.google.com/issues/116541301
   * @Deprecated Use DataBindingUtil.inflate(inflater, R.layout.fragment_vacations_balance, root, attachToRoot, component)
   */
  @NonNull
  @Deprecated
  public static FragmentVacationsBalanceBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup root, boolean attachToRoot, @Nullable Object component) {
    return ViewDataBinding.<FragmentVacationsBalanceBinding>inflateInternal(inflater, R.layout.fragment_vacations_balance, root, attachToRoot, component);
  }

  @NonNull
  public static FragmentVacationsBalanceBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, DataBindingUtil.getDefaultComponent());
  }

  /**
   * This method receives DataBindingComponent instance as type Object instead of
   * type DataBindingComponent to avoid causing too many compilation errors if
   * compilation fails for another reason.
   * https://issuetracker.google.com/issues/116541301
   * @Deprecated Use DataBindingUtil.inflate(inflater, R.layout.fragment_vacations_balance, null, false, component)
   */
  @NonNull
  @Deprecated
  public static FragmentVacationsBalanceBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable Object component) {
    return ViewDataBinding.<FragmentVacationsBalanceBinding>inflateInternal(inflater, R.layout.fragment_vacations_balance, null, false, component);
  }

  public static FragmentVacationsBalanceBinding bind(@NonNull View view) {
    return bind(view, DataBindingUtil.getDefaultComponent());
  }

  /**
   * This method receives DataBindingComponent instance as type Object instead of
   * type DataBindingComponent to avoid causing too many compilation errors if
   * compilation fails for another reason.
   * https://issuetracker.google.com/issues/116541301
   * @Deprecated Use DataBindingUtil.bind(view, component)
   */
  @Deprecated
  public static FragmentVacationsBalanceBinding bind(@NonNull View view,
      @Nullable Object component) {
    return (FragmentVacationsBalanceBinding)bind(component, view, R.layout.fragment_vacations_balance);
  }
}
